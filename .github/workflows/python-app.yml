# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ v0.1.0 ]
  pull_request:
    branches: [ v0.1.0 ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9.1
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.1"
    - name: update
      run: |
        sudo apt update
    - name: dependencies
      run: |
        
    - name: Install dependencies
      run: |
        sudo apt install -y gconf-service libasound2 libatk1.0-0 libcairo2 libcups2 libfontconfig1 libgdk-pixbuf2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libxss1 fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils
    - name: browser install
      run: |
        sudo apt install -y wget
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt install firefox
    - name: chrome driver
      run: |
        sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && sudo dpkg -i google-chrome-stable_current_amd64.deb && sudo apt-get install -f && sudo wget https://chromedriver.storage.googleapis.com/102.0.5005.27/chromedriver_linux64.zip && sudo unzip chromedriver_linux64.zip && sudo mv chromedriver /usr/bin/chromedriver && sudo chown root:root /usr/bin/chromedriver && sudo chmod +x /usr/bin/chromedriver
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -v -s -m pnr Tests/Test_Resource_Booking/test_RoomBooking.py
    - name: Send email
      run: |
        pytest -v -s Tests/test_send_email.py
